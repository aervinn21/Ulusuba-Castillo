$colors:(
    "primary" : $clr-primary,
    "yellow" : $clr-yellow,
    "dark" : $clr-black,
    "purple" : $clr-purple,
    "lightW" : $clr-lightW,
    "green" : $clr-green,
    "gray" : $clr-gray
);

@each $key, $val in $colors{
    .bg{
        &--#{$key}{
            background-color: $val;
        }
    }
    .text{
        &--#{$key}{
            color: $val;
        }
    }
    .btn1.bg--#{$key}{
        @include btn1($val);
    }
}

$align: (
    "center" : center,
    "left" : left,
    "right" : right,
    "justify" : justify,
);

@each $key, $val in $align {
    .text {
      &--#{$key} {
        text-align: $val;
      }
    }
  }

  $justify :(
    "start" : flex-start,
    "center": center,
    "end": flex-end,
    "between": space-between,
    "around": space-around,
  );
  
  @each $key, $val in $justify {
    .justify {
      &--#{$key} {
        justify-content: $val;
      }
    }
  }

  $displays: flex, grid, block, inline-block, inline;
  @each $display in $displays{
    .d--#{$display} {
        display: $display;
      }
    }

$alignments: (
  "start": flex-start,
  "center": center,
  "end": flex-end,
);

@each $key, $val in $alignments {
  .align {
    &--#{$key} {
      align-items: $val;
    }
  }
}

@for $i from 1 through 10{
    .mb--#{$i}{
        margin-bottom: $i + rem;
    }
    .mt--#{$i}{
        margin-top: $i + rem;
    }
    .py--#{$i}{
      padding: $i + rem 0;
    }
    .px--#{$i}{
      padding: 0 $i + rem;
    }
    .my--#{$i}{
      margin: $i + rem 0;
    }
    .mx--#{$i}{
      margin: 0 $i + rem;
    }
}
